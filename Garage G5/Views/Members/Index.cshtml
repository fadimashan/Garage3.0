@model PaginatedList<Garage_G5.Models.Member>

@{ ViewData["Title"] = "Index"; }

<div id="subHeading">
    <h2 class="sh2 mb-4" style="clear:both;">Members</h2>
</div>
<!-- Grid row -->
<div class="row mb-5">


    <div class="col-md-8">
        <form asp-action="Index">
            <div class="input-group mb-3">
                <input type="text" class="form-control" name="searchString" onchange="this.form.submit()" placeholder="Search on member name" />
                <div class="input-group-append  ">
                    <button onchange="this.form.submit()" type="submit" class="form-control">Search</button>
                </div>
            </div>
        </form>
    </div>

    <div class="container"></div>
    <table class="table table-striped table-sm table-hover text-monospace">
        <thead>
            <tr>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.FullNameSortParm, CurrentSort = ViewBag.FullNameSortParm })">
                            Name <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>
                    </p>
                </th>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.AgeSortParm, CurrentSort = ViewBag.AgeSortParm })">
                            Age <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>
                    </p>
                </th>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.PersonalIdNumberSortParm, CurrentSort = ViewBag.PersonalIdNumberSortParm })">
                            Personal-Id <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>
                    </p>
                </th>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.DateAddedSortParm, CurrentSort = ViewBag.DateAddedSortParm })">
                            Date Added <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>
                    </p>
                </th>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.DateExpiredSortParm, CurrentSort = ViewBag.DateExpiredSortParm })">
                            Pro Expiration Date <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>

                    </p>
                </th>
                <th>
                    <p>
                        <a style="color:black" href="@Url.Action("Index", new { sortOrder = ViewBag.MembershipTypeSortParm, CurrentSort = ViewBag.MembershipTypeSortParm })">
                            Member Type <i class="fa fa-sort" aria-hidden="true"> </i>
                        </a>
                    </p>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a data-trigger="hover" data-toggle="popover" data-html="true" data-content="Phone: @item.Phone<br/> Member since: @{ var memSince = item.DateAdded.ToString("yyyy-MM-dd");} @Html.DisplayFor(modelItem => memSince)" asp-controller="Members" asp-action="Details" asp-route-id="@item.Id" type="button" class="btn btn-outline-info btn-sm">@Html.DisplayFor(modelItem => item.FullName)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonalIdNumber)
                    </td>
                    <td>
                        @{var dateAdded = (item.DateAdded).ToString("dd/MMM/yyyy");}  @Html.DisplayFor(modelItem => dateAdded)
                    </td>
                    <td>
                        @{var expired = (item.BonusAccountExpires).ToString("dd/MMM/yyyy");}  @Html.DisplayFor(modelItem => expired)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MembershipType)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" type="button" class="btn btn-outline-info btn-sm">Edit</a>
                        <a asp-action="MemberCheckIn" asp-route-id="@item.Id" type="button" class="btn btn-outline-primary btn-sm">Member Check In</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" type="button" class="btn btn-outline-warning btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : ""; }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
